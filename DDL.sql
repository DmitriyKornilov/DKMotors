PRAGMA ENCODING     = "UTF-8";
PRAGMA FOREIGN_KEYS = ON;

/* Список грузополучателей */
CREATE TABLE IF NOT EXISTS CARGORECEIVERS (
    ReceiverID   INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    ReceiverName TEXT    UNIQUE NOT NULL
);
INSERT OR IGNORE INTO  CARGORECEIVERS (ReceiverID, ReceiverName) VALUES (0, '<не указан>');

/* Список отгрузок */
CREATE TABLE IF NOT EXISTS CARGOLIST (
    CargoID    INTEGER  PRIMARY KEY AUTOINCREMENT NOT NULL,
    ReceiverID INTEGER  NOT NULL DEFAULT 0,
    SendDate   DATETIME NOT NULL,
    CONSTRAINT FK_CARGOLIST_RECEIVERID FOREIGN KEY (ReceiverID) REFERENCES CARGORECEIVERS(ReceiverID) ON UPDATE CASCADE ON DELETE SET DEFAULT
);
INSERT OR IGNORE INTO  CARGOLIST (CargoID, ReceiverID, SendDate) VALUES (0, 0, 0);

/* Наименования двигателей */
CREATE TABLE IF NOT EXISTS MOTORNAMES (
    NameID    INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    MotorName TEXT    UNIQUE NOT NULL
);
INSERT OR IGNORE INTO  MOTORNAMES (NameID, MotorName) VALUES (0, '<не указано>');

/* Список собранных двигателей */
CREATE TABLE IF NOT EXISTS MOTORLIST (
    MotorID   INTEGER  PRIMARY KEY AUTOINCREMENT NOT NULL,
    NameID    INTEGER  NOT NULL DEFAULT 0,
    MotorNum  TEXT     NOT NULL,
    RotorNum  TEXT    ,
    BuildDate DATETIME NOT NULL,
    CargoID   INTEGER  NOT NULL DEFAULT 0,
    Series    TEXT     NOT NULL,
    OldMotor  INTEGER  NOT NULL DEFAULT 0,
    CONSTRAINT FK_MOTORLIST_NAMEID  FOREIGN KEY (NameID)  REFERENCES MOTORNAMES(MotorName) ON UPDATE CASCADE ON DELETE SET DEFAULT,
    CONSTRAINT FK_MOTORLIST_CARGOID FOREIGN KEY (CargoID) REFERENCES CARGOLIST(CargoID)    ON UPDATE CASCADE ON DELETE SET DEFAULT
);

/* Испытания двигателей */
CREATE TABLE IF NOT EXISTS MOTORTEST (
    TestID   INTEGER  PRIMARY KEY AUTOINCREMENT NOT NULL,
    MotorID  INTEGER  NOT NULL,
    TestDate DATETIME NOT NULL,
    Fail     INTEGER  NOT NULL DEFAULT 0,
    TestNote TEXT     NOT NULL DEFAULT '',
    CONSTRAINT FK_MOTORTEST_MOTORID FOREIGN KEY (MotorID) REFERENCES MOTORLIST(MotorID) ON UPDATE CASCADE ON DELETE CASCADE
);

/* Неисправности */
CREATE TABLE IF NOT EXISTS RECLAMATIONDEFECTS (
    DefectID   INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    DefectName TEXT    NOT NULL
);
INSERT OR IGNORE INTO  RECLAMATIONDEFECTS (DefectID, DefectName) VALUES (0, '<не указано>');
INSERT OR IGNORE INTO  RECLAMATIONDEFECTS (DefectID, DefectName) VALUES (1, 'Электродвигатель исправен');
INSERT OR IGNORE INTO  RECLAMATIONDEFECTS (DefectID, DefectName) VALUES (2, 'Статор (обмотка)');
INSERT OR IGNORE INTO  RECLAMATIONDEFECTS (DefectID, DefectName) VALUES (3, 'Подшипник');
INSERT OR IGNORE INTO  RECLAMATIONDEFECTS (DefectID, DefectName) VALUES (4, 'Ротор');
INSERT OR IGNORE INTO  RECLAMATIONDEFECTS (DefectID, DefectName) VALUES (5, 'Вал');
INSERT OR IGNORE INTO  RECLAMATIONDEFECTS (DefectID, DefectName) VALUES (6, 'Станина');
INSERT OR IGNORE INTO  RECLAMATIONDEFECTS (DefectID, DefectName) VALUES (7, 'Подшипниковый щит');
INSERT OR IGNORE INTO  RECLAMATIONDEFECTS (DefectID, DefectName) VALUES (8, 'Клеммная коробка');
INSERT OR IGNORE INTO  RECLAMATIONDEFECTS (DefectID, DefectName) VALUES (9, 'Крепежные элементы');

/* Ведущие заводы */
CREATE TABLE IF NOT EXISTS RECLAMATIONFACTORIES (
    FactoryID   INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    FactoryName TEXT    NOT NULL
);
INSERT OR IGNORE INTO  RECLAMATIONFACTORIES (FactoryID, FactoryName) VALUES (0, '<не указан>');

/* Предприятия (депо) */
CREATE TABLE IF NOT EXISTS RECLAMATIONPLACES (
    PlaceID   INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    PlaceName TEXT    NOT NULL
);
INSERT OR IGNORE INTO  RECLAMATIONPLACES (PlaceID, PlaceName) VALUES (0, '<не указано>');

/* Причины неисправности */
CREATE TABLE IF NOT EXISTS RECLAMATIONREASONS (
    ReasonID    INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    ReasonName  TEXT    NOT NULL,
    ReasonColor INTEGER NOT NULL DEFAULT 16777215
);
INSERT OR IGNORE INTO  RECLAMATIONREASONS (ReasonID, ReasonName, ReasonColor) VALUES (0, '<не указана>', 16777215);
INSERT OR IGNORE INTO  RECLAMATIONREASONS (ReasonID, ReasonName, ReasonColor) VALUES (1, 'Некачественные комплектующие', 12058623);
INSERT OR IGNORE INTO  RECLAMATIONREASONS (ReasonID, ReasonName, ReasonColor) VALUES (2, 'Дефект сборки/изготовления', 13027071);
INSERT OR IGNORE INTO  RECLAMATIONREASONS (ReasonID, ReasonName, ReasonColor) VALUES (3, 'Нарушение условий эксплуатации', 13828050);
INSERT OR IGNORE INTO  RECLAMATIONREASONS (ReasonID, ReasonName, ReasonColor) VALUES (4, 'Электродвигатель исправен', 13828050);

/* Список рекламаций */
CREATE TABLE IF NOT EXISTS RECLAMATIONS (
    RecID       INTEGER  PRIMARY KEY AUTOINCREMENT NOT NULL,
    RecDate     DATETIME NOT NULL,
    MotorID     INTEGER  NOT NULL,
    Mileage     INTEGER  NOT NULL,
    PlaceID     INTEGER  NOT NULL DEFAULT 0,
    FactoryID   INTEGER  NOT NULL DEFAULT 0,
    Departure   TEXT     NOT NULL DEFAULT '',
    DefectID    INTEGER  NOT NULL DEFAULT 0,
    ReasonID    INTEGER  NOT NULL DEFAULT 0,
    Opinion     INTEGER  NOT NULL DEFAULT 0,
    RecNote     TEXT    ,
    ArrivalDate DATETIME NOT NULL DEFAULT 0,
    SendingDate DATETIME NOT NULL DEFAULT 0,
    Passport    INTEGER  NOT NULL DEFAULT 0,
    CONSTRAINT FK_RECLAMATIONS_MOTORID   FOREIGN KEY (MotorID)   REFERENCES MOTORLIST(MotorID)              ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FK_RECLAMATIONS_PLACEID   FOREIGN KEY (PlaceID)   REFERENCES RECLAMATIONPLACES(PlaceID)      ON UPDATE CASCADE ON DELETE SET DEFAULT,
    CONSTRAINT FK_RECLAMATIONS_FACTORYID FOREIGN KEY (FactoryID) REFERENCES RECLAMATIONFACTORIES(FactoryID) ON UPDATE CASCADE ON DELETE SET DEFAULT,
    CONSTRAINT FK_RECLAMATIONS_DEFECTID  FOREIGN KEY (DefectID)  REFERENCES RECLAMATIONDEFECTS(DefectID)    ON UPDATE CASCADE ON DELETE SET DEFAULT,
    CONSTRAINT FK_RECLAMATIONS_REASONID  FOREIGN KEY (ReasonID)  REFERENCES RECLAMATIONREASONS(ReasonID)    ON UPDATE CASCADE ON DELETE SET DEFAULT
);
